name: CI-Tests
on:
  pull_request:
    branches:
      - 'develop'
    paths:
      - 'deployment/webservice/**'

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        working-directory: "deployment/webservice/"
        run: pip install pipenv && pipenv install --dev

      - name: Run Unit tests
        working-directory: "deployment/webservice/"
        run: pipenv run pytest tests/

      - name: Run Pylint
        working-directory: "deployment/webservice/"
        run: pipenv run pylint --recursive=y .

      - name: Run Integration Test
        working-directory: 'deployment/webservice/integraton-test'
        run: |
          . run.sh

  tf-plan:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: hashicorp/setup-terraform@v2

      - name: TF plan
        id: plan
        working-directory: 'terraform'
        run: |
          terraform init -backend-config="key=paraguay-public-servant-prod.tfstate" --reconfigure && terraform plan --var-file vars/prod.tfvars

#
#jobs:
#  tu_job:

#    steps:

#      - name: Copiar archivos a Terraform
#        run: |
#          cp Dockerfile ../../terraform/file/flask/Dockerfile
#          cp Pipfile ../../terraform/file/flask/Pipfile
#          cp Pipfile.lock ../../terraform/file/flask/Pipfile.lock
#          cp predict.py ../../terraform/file/flask/predict.py
